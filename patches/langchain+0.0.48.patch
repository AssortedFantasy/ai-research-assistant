diff --git a/node_modules/langchain/dist/agents/mrkl/index.js b/node_modules/langchain/dist/agents/mrkl/index.js
index f7a719d..a6cb26b 100644
--- a/node_modules/langchain/dist/agents/mrkl/index.js
+++ b/node_modules/langchain/dist/agents/mrkl/index.js
@@ -66,7 +66,7 @@ export class ZeroShotAgent extends Agent {
             const input = parts[parts.length - 1].trim();
             return { tool: "Final Answer", input };
         }
-        const match = /Action: (.*)\nAction Input: (.*)/s.exec(text);
+        const match = /Action: ([\s\S]*)\nAction Input: ([\s\S]*)/.exec(text);
         if (!match) {
             throw new Error(`Could not parse LLM output: ${text}`);
         }
diff --git a/node_modules/langchain/dist/util/index.js b/node_modules/langchain/dist/util/index.js
index f621e68..5212142 100644
--- a/node_modules/langchain/dist/util/index.js
+++ b/node_modules/langchain/dist/util/index.js
@@ -2,7 +2,6 @@ import * as yaml from "yaml";
 export const extname = (path) => `.${path.split(".").pop()}`;
 export const loadFromFile = async (uri, loader, values = {}) => {
     try {
-        const fs = await import("node:fs/promises");
         return loader(await fs.readFile(uri, { encoding: "utf-8" }), uri, values);
     }
     catch (e) {
@@ -44,7 +43,6 @@ const resolveFieldFromFile = async (fieldName, config, load, allowExtensions) =>
             throw new Error("Invalid file type");
         }
         try {
-            const fs = await import("node:fs/promises");
             return load(await fs.readFile(fieldPath, { encoding: "utf-8" }), suffix);
         }
         catch (e) {
diff --git a/node_modules/langchain/dist/vectorstores/hnswlib.js b/node_modules/langchain/dist/vectorstores/hnswlib.js
index c07a00c..3fc8e5e 100644
--- a/node_modules/langchain/dist/vectorstores/hnswlib.js
+++ b/node_modules/langchain/dist/vectorstores/hnswlib.js
@@ -1,4 +1,4 @@
-import fs from "node:fs/promises";
+// import fs from "node:fs/promises";
 import path from "node:path";
 import { SaveableVectorStore } from "./base.js";
 import { Document } from "../document.js";
